//This is the code for my studio welcome system.
//detects motion on the stairs, and sounds an alarm which must be deactivated with a code
//other codes enable lighting options, display the time, temperature, and humidity.

//Arduino Wire library for I2C comms
#include <Wire.h> 

//temp sensor library
#include "DHT.h"

//LCD display library with I2C backpack
#include <LiquidCrystal_I2C.h>

//Keypad library
#include <Keypad.h>

//1 longer than length of password to accomodate for the terminating char \0
#define passwordLen 5
char input[passwordLen];
char pass[passwordLen] = "2594";
//a counter for keyboard entries
byte keyCount = 0;
 
// Constants for row and column sizes
const byte ROWS = 4;
const byte COLS = 4;
int loops = 0;

//I2C address for the LCD
#define I2C_LCD 0x27

//DHT parameters
#define DHTPIN 10
#define DHTTYPE DHT11
 
// Array to represent keys on keypad
char hexaKeys[ROWS][COLS] = 
{
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
 
// Connections to Arduino
byte rowPins[ROWS] = {9, 8, 7, 6};
byte colPins[COLS] = {5, 4, 3, 2};
 
// Create keypad object
Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);
 
// Create LCD object
LiquidCrystal_I2C lcd(I2C_LCD, 20, 4);  

//create DHT object
DHT temp(DHTPIN, DHTTYPE);
 
void setup()
{
  //initialise dht sensor
  temp.begin();
    
  // Setup LCD with backlight and initialize
  lcd.init();
  lcd.backlight();
  lcd.print("McC security LTD");
  delay(500);
  lcd.clear();
  delay(500);
  lcd.setCursor(0,0);
  lcd.print("Enter Password");
}


void loop()
{
  if (loops == 20)
  {
    lcd.setCursor(0, 3);
    lcd.print(updateTemp());
    lcd.print("C");
    lcd.setCursor(14, 3);
    lcd.print(updateHumi());
    lcd.print("%");
    lcd.setCursor(keyCount, 1);
    loops = 0;
  }
  // Get key value if pressed
  char keyIn = customKeypad.getKey();
  if (keyIn)
  {
    input[keyCount] = keyIn;
    lcd.setCursor(keyCount, 1);
    lcd.print(input[keyCount]);
    keyCount++;
  }

  if (keyCount == passwordLen - 1)
  {
    lcd.clear();

    if (!strcmp(input, pass))
    {
      unlocked();
    }

    else
    {
      lcd.print("Incorrect");
      delay(1000);
      reset();
    }

  }
  loops++;
  
  
}

void reset()
{
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Enter password");
  while (keyCount != 0)
  {
    input[keyCount--] = 0;
  }
  return;
}


float updateTemp()
{
  float tempC = temp.readTemperature();
  return tempC;
}

float updateHumi()
{
  float humi = temp.readHumidity();
  return humi;
}

void unlocked()
{
    lcd.print("Correct Password");
    delay(500);
    lcd.setCursor(0, 1);
    lcd.print("Unlocking system");
    delay(500);
    lcd.setCursor(0, 2);
    lcd.print("disabling alarms");
    for (int i = 0; i < 125; i++)
    {
      lcd.setCursor((i%25), 3);
      lcd.print("=");
      delay(50);
      lcd.setCursor((i%25 - 4), 3);
      lcd.print(" ");
      
    }
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Security Dashboard");
    lcd.setCursor(0, 1);
    lcd.print("press A to continue");

    char keyIn = 0;
    int loops = 0;
    while(keyIn != 'A')
    {
      keyIn = customKeypad.getKey();
      if (loops == 20)
      {
        lcd.setCursor(0, 3);
        lcd.print(updateTemp());
        lcd.print("C");
        lcd.setCursor(14, 3);
        lcd.print(updateHumi());
        lcd.print("%");
        loops = 0;
      }
      loops++;
    }
    reset();
}
